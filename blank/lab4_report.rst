.. Весь процесс выполнения лабораторной (скриншоты, текст итд). Кроме команды на запуск контейнера и выводов к работе
.. _lab4:

В работе была исследована возможность использования контейнеров Docker
для сборки и запуска программ.

Заранее были подготовлены (и откорректированы) `исходные файлы
<https://github.com/den5509/lab_unix4/tree/master/work>`_
программы.

Для выполнения работы был написан Dockerfile и bash скрипт (lab4.sh).

Dockerfile:

.. include:: den5509/lab_unix4/Dockerfile
    :literal:

lab4.sh:

.. include:: ../lab4/lab4.sh
    :literal:

Из Dockerfile видно, что:

- На этапе построения контейнера:
    - Исходные файлы программы помещаются в директорию ``/src/`` внутри контейнера;
    - Скрипт помещается в корневую директорию внутри контейнера;
- После запуска контейнера:
    - Запускается написанный скрипт;
    - После запускается интерпретатор bash;

Рекомендуемая команда для запуска контейнера:

.. code-block:: bash

    docker run -ti --rm mrp4p3r/gnu-linux-class:lab4

После выполнения приведенной команды в терминале можно увидеть:

.. image:: _static/img/lab4/result.png

Вывод
=====

Docker не так сложен в понимании основ работы с ним, как кажется на
первый взгляд.



1. Загрузить операционную систему.
2. Войти в виртуальную машину, контейнер или на удаленный сервер приложений (IP адресом XX.XX.XX.254, пользовательspo_<NN>, пароль спросить у преподавателя).
3. Определить домашний (начальный) каталог текущего пользователя.
4. В домашнем каталоге пользователя создать каталог work.
5. Сделать каталог work текущим каталогом.
6. Создать протокол выполнения лабораторной работы lab7.txt в каталоге work.
7. Распаковать все файлы с заготовками и исходным кодом из архива /home/SPO/lab4/source.tar.bz2 в каталог work.
8. Исправить ошибки в коде. Это было выполнено `заранее <https://github.com/den5509/lab_unix4/tree/master/work>`.
9. Скомпелировать, установить и проверить работу программы.

При запуске контейнера очетно видны результаты работы: 
 .. image:: _static/image/Lab4_last.png

В такой последовательности была выполнена лабораторная работа. Все это было выполнено в контейнере. Далее по окончанию работы был написан Dockerfile, при помощи которого можно построить Automated build и запуск и проверка работы достаточно серьезно упрощаются.
Dockerfile: 
.. include:: lab_unix4/Dockerfile
    :literal:

init.sh:
.. include:: lab_unix/init.sh
    :literal:


